apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-push-pipeline
  # Adjust the namespace as needed
spec:
  params:
    - name: git-url
      description: The Git repository URL to clone
    - name: git-revision
      description: The branch or commit to check out 
      default: "main"
    - name: repo-name
      description: The Quay.io repository name
    - name: namespace
      description: The namespace where the application is deployed
      default: "your-namespace"

  workspaces:
    - name: shared-workspace
      description: Workspace for sharing source code and build artifacts between tasks.
    - name: maven-settings
      description: Maven settings configuration

  tasks:
    # 1. Clone the source code repository
    - name: clone-repo
      taskRef:
        kind: ClusterTask
        name: git-clone
      params:
        - name: url
          value: "$(params.git-url)"
        - name: revision
          value: "$(params.git-revision)"
      workspaces:
        - name: output
          workspace: shared-workspace

    # 2. Build the application using Maven after the repo is cloned
    - name: build-app
      runAfter:
        - clone-repo
      taskRef:
        kind: ClusterTask
        name: maven
      params:
        - name: GOALS
          value:
            - clean
            - package
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: maven-settings
          workspace: maven-settings

    # 3. Build the container image once the app is successfully built
    - name: build-image
      runAfter:
        - build-app
      taskRef:
        kind: ClusterTask
        name: buildah
      params:
        - name: IMAGE
          value: "quay.io/mramadan83/$(params.repo-name):$(tasks.clone-repo.results.commit)"
        - name: STORAGE
          value: "overlay"
        - name: TLSVERIFY
          value: "true"
        - name: FORMAT
          value: "oci"
        - name: DOCKERFILE
          value: "/workspace/source/Dockerfile"
      workspaces:
        - name: source
          workspace: shared-workspace

    # 4. Push the built image to Quay.io after the image is created
    - name: push-image
      runAfter:
        - build-image
      taskRef:
        kind: ClusterTask
        name: buildah
      params:
        - name: IMAGE
          value: "quay.io/mramadan83/$(params.repo-name):$(tasks.clone-repo.results.commit)"
        - name: STORAGE
          value: "overlay"
        - name: TLSVERIFY
          value: "true"
        - name: FORMAT
          value: "oci"
        - name: DESTINATION
          value: "docker://quay.io/mramadan83/$(params.repo-name):$(tasks.clone-repo.results.commit)"
        - name: AUTHFILE
          value: "/tekton/credentials/.dockerconfigjson"
      workspaces:
        - name: source
          workspace: shared-workspace
          
    - name: deploy-to-openshift
      runAfter:
        - push-image
      taskSpec:
        steps:
          - name: update-deployment
            image: quay.io/openshift/origin-cli:4.7
            script: |
              #!/usr/bin/env sh
              set -e
              IMAGE="quay.io/your-quay-username/$(params.repo-name):$(tasks.clone-repo.results.commit)"
              DEPLOYMENT="$(params.repo-name)"
              NAMESPACE="$(params.namespace)"

              echo "Updating deployment $DEPLOYMENT in namespace $NAMESPACE to image $IMAGE"
              oc set image deployment/$DEPLOYMENT \
                *=${IMAGE} -n $NAMESPACE
              echo "Deployment updated successfully."
      params:
        - name: repo-name
        - name: namespace
      workspaces:
        - name: source
          workspace: shared-workspace
