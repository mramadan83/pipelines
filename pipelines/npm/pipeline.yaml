apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: npm-build-and-push-pipeline
spec:
  params:
    - name: git-url
      description: The Git repository URL to clone
    - name: git-revision
      description: The branch or commit to check out
      default: "main"
    - name: repo-name
      description: The Quay.io repository name
    - name: target-namespace
      description: The namespace where the application is deployed
    - name: infra-git-url
      type: string
      description: Git repository URL for the infra repo containing deployment.yaml
      default: "https://github.com/mramadan83/infra.git"

  workspaces:
    - name: shared-workspace
      description: Workspace for sharing source code and build artifacts between tasks.
    - name: infra-workspace
      description: Workspace for sharing infra source code and build artifacts between tasks.

  tasks:
    # 1. Clone the source code repository
    - name: clone-repo
      taskRef:
        kind: ClusterTask
        name: git-clone
      params:
        - name: url
          value: "$(params.git-url)"
        - name: revision
          value: "$(params.git-revision)"
      workspaces:
        - name: output
          workspace: shared-workspace

    # 2. Install dependencies and build the application using npm
    - name: build-app
      runAfter:
        - clone-repo
      taskSpec:
        steps:
          - name: npm-install
            image: node:16
            workingDir: /workspace/shared-workspace
            script: |
              #!/usr/bin/env sh
              set -e
              echo "Installing dependencies..."
              npm install

          - name: npm-build
            image: node:16
            workingDir: /workspace/shared-workspace
            script: |
              #!/usr/bin/env sh
              set -e
              echo "Building application..."
              npm run build
      workspaces:
        - name: source
          workspace: shared-workspace

    # 3. Build the container image
    - name: build-image
      runAfter:
        - build-app
      taskRef:
        kind: ClusterTask
        name: buildah
      params:
        - name: IMAGE
          value: "quay.io/mramadan83/$(params.repo-name):$(tasks.clone-repo.results.commit)"
        - name: STORAGE
          value: "overlay"
        - name: TLSVERIFY
          value: "true"
        - name: FORMAT
          value: "oci"
        - name: DOCKERFILE
          value: "/workspace/source/Dockerfile"
      workspaces:
        - name: source
          workspace: shared-workspace

    # 4. Push the container image to Quay.io
    - name: push-image
      runAfter:
        - build-image
      taskRef:
        kind: ClusterTask
        name: buildah
      params:
        - name: IMAGE
          value: "quay.io/mramadan83/$(params.repo-name):$(tasks.clone-repo.results.commit)"
        - name: STORAGE
          value: "overlay"
        - name: TLSVERIFY
          value: "true"
        - name: DESTINATION
          value: "docker://quay.io/mramadan83/$(params.repo-name):$(tasks.clone-repo.results.commit)"
        - name: AUTHFILE
          value: "/tekton/credentials/.dockerconfigjson"
      workspaces:
        - name: source
          workspace: shared-workspace

    # 5. Clone the infra repository
    - name: clone-infra
      runAfter:
        - push-image
      taskRef:
        kind: ClusterTask
        name: git-clone
      params:
        - name: url
          value: "$(params.infra-git-url)"
        - name: revision
          value: "main"
      workspaces:
        - name: output
          workspace: infra-workspace

    # 6. Update the deployment file and commit changes
    - name: update-and-push-deployment
      runAfter:
        - clone-infra
      taskSpec:
        params:
          - name: repo-name
            type: string
        steps:
          - name: update-image
            image: registry.access.redhat.com/ubi8/ubi:latest
            script: |
              #!/usr/bin/env sh
              set -e
              IMAGE="quay.io/mramadan83/$(params.repo-name):$(tasks.clone-repo.results.commit)"
              echo "Updating deployment.yaml with image: $IMAGE"
              sed -i "s|image: quay.io/mramadan83/.*|image: $IMAGE|" /workspace/infra-workspace/$(params.repo-name)/deployment.yaml

          - name: git-commit
            image: alpine/git:latest
            workingDir: /workspace/infra-workspace
            script: |
              #!/usr/bin/env sh
              set -e
              git config --global --add safe.directory /workspace/infra-workspace
              git config user.name "mramadan83"
              git config user.email "mramadan83@gmail.com"
              git add $(params.repo-name)/deployment.yaml
              git commit -m "Update deployment image to $IMAGE"
      params:
        - name: repo-name
          value: "$(params.repo-name)"
      workspaces:
        - name: infra-workspace
          workspace: infra-workspace

    # 7. Apply the deployment in OpenShift
    - name: apply-deployment
      runAfter:
        - update-and-push-deployment
      taskSpec:
        params:
          - name: target-namespace
            type: string
          - name: repo-name
            type: string
        steps:
          - name: apply-deployment
            image: quay.io/openshift/origin-cli:4.7
            script: |
              #!/usr/bin/env sh
              set -e
              oc apply -f /workspace/infra-workspace/$(params.repo-name)/deployment.yaml -n $(params.target-namespace)
      params:
        - name: target-namespace
          value: "$(params.target-namespace)"
        - name: repo-name
          value: "$(params.repo-name)"
      workspaces:
        - name: infra-workspace
          workspace: infra-workspace

